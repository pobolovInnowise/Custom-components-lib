{"version":3,"file":"stories-Button-stories.3354611f4d8c8c5912db.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAUA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;;;;;;AAGA;AAEA","sources":["webpack://task11_v2/./src/Components/Button/Button.tsx"],"sourcesContent":["// import React from \"react\";\n// import * as styles from './Button.module.css';\n//\n// const Button = (props) => {\n//\n//     let clazz = '';\n//     let buttonVariant = 'buttonText'; //default value\n//     if(props.variant === 'text') buttonVariant = 'buttonText';\n//     else if(props.variant === 'contained') buttonVariant = 'buttonContained';\n//     else if(props.variant === 'outlined') buttonVariant = 'buttonOutlined';\n//\n//     let buttonSize = 'sizeSmall';//default value\n//     if(props.size === 'small') buttonSize = 'sizeSmall';\n//     else if(props.size === 'medium') buttonSize = 'sizeMedium';\n//     else if(props.size === 'large') buttonSize = 'sizeLarge';\n//\n//\n//     clazz = `${styles[buttonVariant]} ${styles[buttonSize]} `;\n//\n//\n//     return (\n//         <button className={clazz} {...props} onClick={props.onClick}>\n//             {props.children}\n//         </button>\n//     );\n// };\n//\n// export default Button;\n\nimport React from \"react\";\nimport * as styles from './Button.module.css';\n\ntype ButtonProps = {\n    variant?: 'text' | 'contained' | 'outlined';\n    size?: 'small' | 'medium' | 'large';\n    disabled?: boolean;\n    onClick?: () => void;\n    children?: React.ReactNode;\n};\n\nconst Button: React.FC<ButtonProps> = (props) => {\n    let buttonVariant = 'buttonText';\n    if (props.variant === 'contained') buttonVariant = 'buttonContained';\n    else if (props.variant === 'outlined') buttonVariant = 'buttonOutlined';\n\n    let buttonSize = 'sizeSmall';\n    if (props.size === 'medium') buttonSize = 'sizeMedium';\n    else if (props.size === 'large') buttonSize = 'sizeLarge';\n\n    const clazz = `${styles[buttonVariant]} ${styles[buttonSize]}`;\n\n    return (\n        <button className={clazz} {...props} onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n\n\n\n"],"names":[],"sourceRoot":""}