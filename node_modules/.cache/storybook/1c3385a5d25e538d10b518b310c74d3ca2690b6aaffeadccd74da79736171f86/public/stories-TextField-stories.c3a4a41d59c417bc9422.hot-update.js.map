{"version":3,"file":"stories-TextField-stories.c3a4a41d59c417bc9422.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AAkBA;AAWA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAEA","sources":["webpack://task11_v2/./src/Components/TextField/TextField.tsx"],"sourcesContent":["// import * as React from 'react';\n// import * as styles from './TextField.module.css'\n//\n// function TextField(props) {\n//     let clazz = '';\n//     let classVariant = 'variantOutlined'; //default value\n//     if(props.variant === 'filled') classVariant = 'variantFilled';\n//     else if(props.variant === 'standard') classVariant = 'variantStandard';\n//     else if(props.variant === 'outlined') classVariant = 'variantOutlined';\n//\n//     let classSize = 'sizeSmall';//default value\n//     if(props.size === 'normal') classSize = 'sizeNormal';\n//     else if(props.size === 'small') classSize = 'sizeSmall';\n//\n//     let classMargin = 'marginNone'; //default value\n//     if(props.margin === 'normal') classMargin = 'marginNormal';\n//     else if(props.margin === 'dense') classMargin = 'marginDense';\n//     else if(props.margin === 'none') classMargin = 'marginNone';\n//\n//\n//\n//     clazz = `${styles[classVariant]} ${styles[classSize]} ${styles[classMargin]}`;\n//\n//\n//     return (\n//         <input className={clazz} type=\"text\" placeholder={props.label}\n//                disabled={props.disabled} name={props.name} required={props.required}\n//                autoFocus={props.autoFocus} onChange={props.onChange}/>\n//     );\n// }\n//\n// export default TextField;\n//\n\n\nimport React from 'react';\nimport * as styles from './TextField.module.css';\n\ntype TextFieldVariant = 'filled' | 'standard' | 'outlined';\ntype TextFieldSize = 'small' | 'normal';\ntype TextFieldMargin = 'none' | 'dense' | 'normal';\n\ntype TextFieldProps = {\n    label?: string;\n    variant?: TextFieldVariant;\n    size?: TextFieldSize;\n    margin?: TextFieldMargin;\n    disabled?: boolean;\n    name?: string;\n    required?: boolean;\n    autoFocus?: boolean;\n    onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst TextField: React.FC<TextFieldProps> = ({\n                                                 label = '',\n                                                 variant = 'outlined',\n                                                 size = 'small',\n                                                 margin = 'none',\n                                                 disabled = false,\n                                                 name,\n                                                 required = false,\n                                                 autoFocus = false,\n                                                 onChange,\n                                             }) => {\n    // Выбираем класс варианта\n    let classVariant: 'variantFilled' | 'variantStandard' | 'variantOutlined' = 'variantOutlined';\n    if (variant === 'filled') classVariant = 'variantFilled';\n    else if (variant === 'standard') classVariant = 'variantStandard';\n\n    // Выбираем класс размера\n    let classSize: 'sizeSmall' | 'sizeNormal' = size === 'normal' ? 'sizeNormal' : 'sizeSmall';\n\n    // Выбираем класс отступа\n    let classMargin: 'marginNone' | 'marginDense' | 'marginNormal' = 'marginNone';\n    if (margin === 'dense') classMargin = 'marginDense';\n    else if (margin === 'normal') classMargin = 'marginNormal';\n\n    const clazz = `${styles[classVariant as keyof typeof styles]} ${styles[classSize as keyof typeof styles]} ${styles[classMargin as keyof typeof styles]}`;\n\n    return (\n        <input\n            className={clazz}\n            type=\"text\"\n            placeholder={label}\n            disabled={disabled}\n            name={name}\n            required={required}\n            autoFocus={autoFocus}\n            onChange={onChange}\n        />\n    );\n};\n\nexport default TextField;\n"],"names":[],"sourceRoot":""}