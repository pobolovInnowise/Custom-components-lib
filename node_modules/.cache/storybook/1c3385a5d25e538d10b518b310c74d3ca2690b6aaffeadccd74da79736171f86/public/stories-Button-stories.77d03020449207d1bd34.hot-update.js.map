{"version":3,"file":"stories-Button-stories.77d03020449207d1bd34.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AAAA;AACA;;;;;;AAGA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://task11_v2/./src/Components/Button/Button.tsx","webpack://task11_v2/./src/stories/Button.stories.jsx"],"sourcesContent":["import React from \"react\";\nimport * as styles from './Button.module.css';\n\nconst Button = (props) => {\n\n    let clazz = '';\n    let buttonVariant = 'buttonText'; //default value\n    if(props.variant === 'text') buttonVariant = 'buttonText';\n    else if(props.variant === 'contained') buttonVariant = 'buttonContained';\n    else if(props.variant === 'outlined') buttonVariant = 'buttonOutlined';\n\n    let buttonSize = 'sizeSmall';//default value\n    if(props.size === 'small') buttonSize = 'sizeSmall';\n    else if(props.size === 'medium') buttonSize = 'sizeMedium';\n    else if(props.size === 'large') buttonSize = 'sizeLarge';\n\n\n    clazz = `${styles[buttonVariant]} ${styles[buttonSize]} `;\n\n\n    return (\n        <button className={clazz} {...props} onClick={props.onClick}>\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;\n\n\n\n\n","import React from 'react';\nimport Button from '../Components/Button/Button';\n\nexport default {\n    title: 'Components/Button',\n    component: Button,\n    argTypes: {\n        variant: {\n            control: { type: 'radio' },\n            options: ['text', 'contained', 'outlined'],\n        },\n        size: {\n            control: { type: 'radio' },\n            options: ['small', 'medium', 'large'],\n        },\n        disabled: { control: 'boolean' },\n    },\n};\n\nconst Template = (args) => <Button {...args} />;\n\n\nexport const TextButton = Template.bind({});\nTextButton.args = {\n    variant: 'text',\n    size: 'small',\n    disabled: false,\n    children: 'small',\n};\n\nexport const ContainedButton = Template.bind({});\nContainedButton.args = {\n    variant: 'contained',\n    size: 'medium',\n    disabled: false,\n    children: 'medium',\n};\n\nexport const OutlinedButton = Template.bind({});\nOutlinedButton.args = {\n    variant: 'outlined',\n    size: 'large',\n    disabled: false,\n    children: 'large',\n};\n"],"names":[],"sourceRoot":""}